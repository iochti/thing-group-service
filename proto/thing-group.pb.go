// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/iochti/thing-group-service/proto/thing-group.proto

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	github.com/iochti/thing-group-service/proto/thing-group.proto

It has these top-level messages:
	ThingGroup
	GroupIDRequest
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/empty"
import google_protobuf1 "github.com/golang/protobuf/ptypes/timestamp"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package

type ThingGroup struct {
	ID          int32                       `protobuf:"varint,1,opt,name=ID" json:"ID,omitempty"`
	Name        string                      `protobuf:"bytes,2,opt,name=Name" json:"Name,omitempty"`
	Description string                      `protobuf:"bytes,3,opt,name=Description" json:"Description,omitempty"`
	CreatedAt   *google_protobuf1.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	UpdatedAt   *google_protobuf1.Timestamp `protobuf:"bytes,5,opt,name=updated_at,json=updatedAt" json:"updated_at,omitempty"`
}

func (m *ThingGroup) Reset()                    { *m = ThingGroup{} }
func (m *ThingGroup) String() string            { return proto1.CompactTextString(m) }
func (*ThingGroup) ProtoMessage()               {}
func (*ThingGroup) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ThingGroup) GetID() int32 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *ThingGroup) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ThingGroup) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *ThingGroup) GetCreatedAt() *google_protobuf1.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *ThingGroup) GetUpdatedAt() *google_protobuf1.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

type GroupIDRequest struct {
	ID int32 `protobuf:"varint,1,opt,name=ID" json:"ID,omitempty"`
}

func (m *GroupIDRequest) Reset()                    { *m = GroupIDRequest{} }
func (m *GroupIDRequest) String() string            { return proto1.CompactTextString(m) }
func (*GroupIDRequest) ProtoMessage()               {}
func (*GroupIDRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *GroupIDRequest) GetID() int32 {
	if m != nil {
		return m.ID
	}
	return 0
}

func init() {
	proto1.RegisterType((*ThingGroup)(nil), "proto.ThingGroup")
	proto1.RegisterType((*GroupIDRequest)(nil), "proto.GroupIDRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for ThingGroupSvc service

type ThingGroupSvcClient interface {
	GetGroup(ctx context.Context, in *GroupIDRequest, opts ...grpc.CallOption) (*ThingGroup, error)
	UpdateGroup(ctx context.Context, in *ThingGroup, opts ...grpc.CallOption) (*ThingGroup, error)
	CreateGroup(ctx context.Context, in *ThingGroup, opts ...grpc.CallOption) (*ThingGroup, error)
	DeleteGroup(ctx context.Context, in *GroupIDRequest, opts ...grpc.CallOption) (*google_protobuf.Empty, error)
}

type thingGroupSvcClient struct {
	cc *grpc.ClientConn
}

func NewThingGroupSvcClient(cc *grpc.ClientConn) ThingGroupSvcClient {
	return &thingGroupSvcClient{cc}
}

func (c *thingGroupSvcClient) GetGroup(ctx context.Context, in *GroupIDRequest, opts ...grpc.CallOption) (*ThingGroup, error) {
	out := new(ThingGroup)
	err := grpc.Invoke(ctx, "/proto.ThingGroupSvc/GetGroup", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *thingGroupSvcClient) UpdateGroup(ctx context.Context, in *ThingGroup, opts ...grpc.CallOption) (*ThingGroup, error) {
	out := new(ThingGroup)
	err := grpc.Invoke(ctx, "/proto.ThingGroupSvc/UpdateGroup", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *thingGroupSvcClient) CreateGroup(ctx context.Context, in *ThingGroup, opts ...grpc.CallOption) (*ThingGroup, error) {
	out := new(ThingGroup)
	err := grpc.Invoke(ctx, "/proto.ThingGroupSvc/CreateGroup", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *thingGroupSvcClient) DeleteGroup(ctx context.Context, in *GroupIDRequest, opts ...grpc.CallOption) (*google_protobuf.Empty, error) {
	out := new(google_protobuf.Empty)
	err := grpc.Invoke(ctx, "/proto.ThingGroupSvc/DeleteGroup", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ThingGroupSvc service

type ThingGroupSvcServer interface {
	GetGroup(context.Context, *GroupIDRequest) (*ThingGroup, error)
	UpdateGroup(context.Context, *ThingGroup) (*ThingGroup, error)
	CreateGroup(context.Context, *ThingGroup) (*ThingGroup, error)
	DeleteGroup(context.Context, *GroupIDRequest) (*google_protobuf.Empty, error)
}

func RegisterThingGroupSvcServer(s *grpc.Server, srv ThingGroupSvcServer) {
	s.RegisterService(&_ThingGroupSvc_serviceDesc, srv)
}

func _ThingGroupSvc_GetGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GroupIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ThingGroupSvcServer).GetGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ThingGroupSvc/GetGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ThingGroupSvcServer).GetGroup(ctx, req.(*GroupIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ThingGroupSvc_UpdateGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ThingGroup)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ThingGroupSvcServer).UpdateGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ThingGroupSvc/UpdateGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ThingGroupSvcServer).UpdateGroup(ctx, req.(*ThingGroup))
	}
	return interceptor(ctx, in, info, handler)
}

func _ThingGroupSvc_CreateGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ThingGroup)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ThingGroupSvcServer).CreateGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ThingGroupSvc/CreateGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ThingGroupSvcServer).CreateGroup(ctx, req.(*ThingGroup))
	}
	return interceptor(ctx, in, info, handler)
}

func _ThingGroupSvc_DeleteGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GroupIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ThingGroupSvcServer).DeleteGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ThingGroupSvc/DeleteGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ThingGroupSvcServer).DeleteGroup(ctx, req.(*GroupIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ThingGroupSvc_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.ThingGroupSvc",
	HandlerType: (*ThingGroupSvcServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetGroup",
			Handler:    _ThingGroupSvc_GetGroup_Handler,
		},
		{
			MethodName: "UpdateGroup",
			Handler:    _ThingGroupSvc_UpdateGroup_Handler,
		},
		{
			MethodName: "CreateGroup",
			Handler:    _ThingGroupSvc_CreateGroup_Handler,
		},
		{
			MethodName: "DeleteGroup",
			Handler:    _ThingGroupSvc_DeleteGroup_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/iochti/thing-group-service/proto/thing-group.proto",
}

func init() {
	proto1.RegisterFile("github.com/iochti/thing-group-service/proto/thing-group.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 317 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x92, 0x41, 0x4b, 0xc3, 0x40,
	0x10, 0x85, 0xbb, 0xb5, 0x15, 0x3b, 0xc5, 0x82, 0x0b, 0x4a, 0x88, 0x07, 0x43, 0x4e, 0xbd, 0x74,
	0x03, 0x15, 0x05, 0x0f, 0x0a, 0xc5, 0x48, 0xe9, 0xc5, 0x43, 0xac, 0x67, 0x49, 0xb7, 0x63, 0xba,
	0xd0, 0x74, 0x63, 0x32, 0x29, 0xf8, 0x0f, 0xfd, 0x43, 0xde, 0x25, 0x9b, 0x84, 0xd6, 0x96, 0x22,
	0x9e, 0x12, 0x66, 0xde, 0xf7, 0xf2, 0xde, 0x10, 0xb8, 0x8f, 0x14, 0x2d, 0xf2, 0x99, 0x90, 0x3a,
	0xf6, 0x94, 0x96, 0x0b, 0x52, 0x1e, 0x2d, 0xd4, 0x2a, 0x1a, 0x44, 0xa9, 0xce, 0x93, 0x41, 0x86,
	0xe9, 0x5a, 0x49, 0xf4, 0x92, 0x54, 0x93, 0xde, 0xde, 0x08, 0x33, 0xe1, 0x6d, 0xf3, 0xb0, 0x2f,
	0x23, 0xad, 0xa3, 0x65, 0x25, 0x9b, 0xe5, 0xef, 0x1e, 0xc6, 0x09, 0x7d, 0x96, 0x1a, 0xfb, 0x6a,
	0x77, 0x49, 0x2a, 0xc6, 0x8c, 0xc2, 0xb8, 0x32, 0x71, 0xbf, 0x18, 0xc0, 0xb4, 0xb0, 0x1e, 0x17,
	0xce, 0xbc, 0x07, 0xcd, 0x89, 0x6f, 0x31, 0x87, 0xf5, 0xdb, 0x41, 0x73, 0xe2, 0x73, 0x0e, 0xad,
	0xe7, 0x30, 0x46, 0xab, 0xe9, 0xb0, 0x7e, 0x27, 0x30, 0xef, 0xdc, 0x81, 0xae, 0x8f, 0x99, 0x4c,
	0x55, 0x42, 0x4a, 0xaf, 0xac, 0x23, 0xb3, 0xda, 0x1e, 0xf1, 0x3b, 0x00, 0x99, 0x62, 0x48, 0x38,
	0x7f, 0x0b, 0xc9, 0x6a, 0x39, 0xac, 0xdf, 0x1d, 0xda, 0xa2, 0x8c, 0x22, 0xea, 0x28, 0x62, 0x5a,
	0x47, 0x09, 0x3a, 0x95, 0x7a, 0x44, 0x05, 0x9a, 0x27, 0xf3, 0x1a, 0x6d, 0xff, 0x8d, 0x56, 0xea,
	0x11, 0xb9, 0x0e, 0xf4, 0x4c, 0x89, 0x89, 0x1f, 0xe0, 0x47, 0x8e, 0x19, 0xed, 0xb6, 0x19, 0x7e,
	0x33, 0x38, 0xdd, 0x94, 0x7d, 0x59, 0x4b, 0x7e, 0x0b, 0x27, 0x63, 0xa4, 0xb2, 0xfb, 0x79, 0xe9,
	0x2f, 0x7e, 0x9b, 0xd8, 0x67, 0xd5, 0x78, 0x03, 0xba, 0x0d, 0x7e, 0x03, 0xdd, 0x57, 0xf3, 0xe1,
	0x12, 0xdd, 0xd7, 0x1c, 0xc4, 0x1e, 0x4d, 0xd5, 0xff, 0x61, 0x0f, 0xc5, 0xc5, 0x97, 0x58, 0x63,
	0x07, 0x82, 0x5e, 0xec, 0x9d, 0xe9, 0xa9, 0xf8, 0x13, 0xdc, 0xc6, 0xec, 0xd8, 0x4c, 0xae, 0x7f,
	0x02, 0x00, 0x00, 0xff, 0xff, 0x66, 0x3a, 0x8b, 0xe6, 0x71, 0x02, 0x00, 0x00,
}
